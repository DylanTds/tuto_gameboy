                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Mon May 31 11:26:25 2021
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc30840
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _jump
                             13 	.globl _detecSurface
                             14 	.globl _perfDelay
                             15 	.globl _move_sprite
                             16 	.globl _set_sprite_tile
                             17 	.globl _set_sprite_data
                             18 	.globl _wait_vbl_done
                             19 	.globl _joypad
                             20 	.globl _Hero
                             21 	.globl _floorYPos
                             22 	.globl _gravity
                             23 	.globl _currSpeedY
                             24 	.globl _jumping
                             25 	.globl _playerlocation
                             26 	.globl _main
                             27 	.globl _jump
                             28 	.globl _detecSurface
                             29 	.globl _perfDelay
                             30 ;--------------------------------------------------------
                             31 ; Externals used
                             32 ;--------------------------------------------------------
                             33 	.globl _IE_REG
                             34 	.globl _SVBK_REG
                             35 	.globl _OCPD_REG
                             36 	.globl _OCPS_REG
                             37 	.globl _BCPD_REG
                             38 	.globl _BCPS_REG
                             39 	.globl _RP_REG
                             40 	.globl _HDMA5_REG
                             41 	.globl _HDMA4_REG
                             42 	.globl _HDMA3_REG
                             43 	.globl _HDMA2_REG
                             44 	.globl _HDMA1_REG
                             45 	.globl _VBK_REG
                             46 	.globl _KEY1_REG
                             47 	.globl _WX_REG
                             48 	.globl _WY_REG
                             49 	.globl _OBP1_REG
                             50 	.globl _OBP0_REG
                             51 	.globl _BGP_REG
                             52 	.globl _DMA_REG
                             53 	.globl _LYC_REG
                             54 	.globl _LY_REG
                             55 	.globl _SCX_REG
                             56 	.globl _SCY_REG
                             57 	.globl _STAT_REG
                             58 	.globl _LCDC_REG
                             59 	.globl _NR52_REG
                             60 	.globl _NR51_REG
                             61 	.globl _NR50_REG
                             62 	.globl _NR44_REG
                             63 	.globl _NR43_REG
                             64 	.globl _NR42_REG
                             65 	.globl _NR41_REG
                             66 	.globl _NR34_REG
                             67 	.globl _NR33_REG
                             68 	.globl _NR32_REG
                             69 	.globl _NR31_REG
                             70 	.globl _NR30_REG
                             71 	.globl _NR24_REG
                             72 	.globl _NR23_REG
                             73 	.globl _NR22_REG
                             74 	.globl _NR21_REG
                             75 	.globl _NR14_REG
                             76 	.globl _NR13_REG
                             77 	.globl _NR12_REG
                             78 	.globl _NR11_REG
                             79 	.globl _NR10_REG
                             80 	.globl _IF_REG
                             81 	.globl _TAC_REG
                             82 	.globl _TMA_REG
                             83 	.globl _TIMA_REG
                             84 	.globl _DIV_REG
                             85 	.globl _SC_REG
                             86 	.globl _SB_REG
                             87 	.globl _P1_REG
                             88 	.globl __io_out
                             89 	.globl __io_in
                             90 	.globl __io_status
                             91 	.globl _sys_time
                             92 	.globl __cpu
                             93 ;--------------------------------------------------------
                             94 ; special function registers
                             95 ;--------------------------------------------------------
                             96 ;--------------------------------------------------------
                             97 ; special function bits 
                             98 ;--------------------------------------------------------
                             99 ;--------------------------------------------------------
                            100 ; internal ram data
                            101 ;--------------------------------------------------------
                            102 	.area _DATA
   0000                     103 _playerlocation::
   0000                     104 	.ds 2
   0002                     105 _jumping::
   0002                     106 	.ds 1
   0003                     107 _currSpeedY::
   0003                     108 	.ds 1
   0004                     109 _gravity::
   0004                     110 	.ds 1
   0005                     111 _floorYPos::
   0005                     112 	.ds 1
   0006                     113 _Hero::
   0006                     114 	.ds 32
                            115 ;--------------------------------------------------------
                            116 ; overlayable items in internal ram 
                            117 ;--------------------------------------------------------
                            118 	.area _OVERLAY
                            119 ;--------------------------------------------------------
                            120 ; indirectly addressable internal ram data
                            121 ;--------------------------------------------------------
                            122 	.area _ISEG
                            123 ;--------------------------------------------------------
                            124 ; bit data
                            125 ;--------------------------------------------------------
                            126 	.area _BSEG
                            127 ;--------------------------------------------------------
                            128 ; external ram data
                            129 ;--------------------------------------------------------
                            130 	.area _XSEG
                            131 ;--------------------------------------------------------
                            132 ; global & static initialisations
                            133 ;--------------------------------------------------------
                            134 	.area _GSINIT
                            135 	.area _GSFINAL
                            136 	.area _GSINIT
                            137 ;	main.c 109
                            138 ; genAssign
                            139 ; AOP_HL for _gravity
   0000 21 04 00            140 	ld	hl,#_gravity + 0
   0003 36 FE               141 	ld	(hl),#0xFE
                            142 ;	main.c 109
                            143 ; genAssign
                            144 ; AOP_HL for _floorYPos
   0005 21 05 00            145 	ld	hl,#_floorYPos + 0
   0008 36 50               146 	ld	(hl),#0x50
                            147 ;	main.c 109
                            148 ; genAssign (pointer)
   000A 11 06 00            149 	ld	de,#_Hero + 0
   000D 3E FF               150 	ld	a,#0xFF
   000F 12                  151 	ld	(de),a
                            152 ; genPlus
                            153 ; genPlusIncr
   0010 11 07 00            154 	ld	de,#_Hero + 0 + 1
                            155 ; genAssign (pointer)
   0013 3E FF               156 	ld	a,#0xFF
   0015 12                  157 	ld	(de),a
                            158 ; genPlus
                            159 ; genPlusIncr
   0016 11 08 00            160 	ld	de,#_Hero + 0 + 2
                            161 ; genAssign (pointer)
   0019 3E FF               162 	ld	a,#0xFF
   001B 12                  163 	ld	(de),a
                            164 ; genPlus
                            165 ; genPlusIncr
   001C 11 09 00            166 	ld	de,#_Hero + 0 + 3
                            167 ; genAssign (pointer)
   001F 3E 81               168 	ld	a,#0x81
   0021 12                  169 	ld	(de),a
                            170 ; genPlus
                            171 ; genPlusIncr
   0022 11 0A 00            172 	ld	de,#_Hero + 0 + 4
                            173 ; genAssign (pointer)
   0025 3E FF               174 	ld	a,#0xFF
   0027 12                  175 	ld	(de),a
                            176 ; genPlus
                            177 ; genPlusIncr
   0028 11 0B 00            178 	ld	de,#_Hero + 0 + 5
                            179 ; genAssign (pointer)
   002B 3E A5               180 	ld	a,#0xA5
   002D 12                  181 	ld	(de),a
                            182 ; genPlus
                            183 ; genPlusIncr
   002E 11 0C 00            184 	ld	de,#_Hero + 0 + 6
                            185 ; genAssign (pointer)
   0031 3E FF               186 	ld	a,#0xFF
   0033 12                  187 	ld	(de),a
                            188 ; genPlus
                            189 ; genPlusIncr
   0034 11 0D 00            190 	ld	de,#_Hero + 0 + 7
                            191 ; genAssign (pointer)
   0037 3E C3               192 	ld	a,#0xC3
   0039 12                  193 	ld	(de),a
                            194 ; genPlus
                            195 ; genPlusIncr
   003A 11 0E 00            196 	ld	de,#_Hero + 0 + 8
                            197 ; genAssign (pointer)
   003D 3E 66               198 	ld	a,#0x66
   003F 12                  199 	ld	(de),a
                            200 ; genPlus
                            201 ; genPlusIncr
   0040 11 0F 00            202 	ld	de,#_Hero + 0 + 9
                            203 ; genAssign (pointer)
   0043 3E 5A               204 	ld	a,#0x5A
   0045 12                  205 	ld	(de),a
                            206 ; genPlus
                            207 ; genPlusIncr
   0046 11 10 00            208 	ld	de,#_Hero + 0 + 10
                            209 ; genAssign (pointer)
   0049 3E FF               210 	ld	a,#0xFF
   004B 12                  211 	ld	(de),a
                            212 ; genPlus
                            213 ; genPlusIncr
   004C 11 11 00            214 	ld	de,#_Hero + 0 + 11
                            215 ; genAssign (pointer)
   004F 3E 81               216 	ld	a,#0x81
   0051 12                  217 	ld	(de),a
                            218 ; genPlus
                            219 ; genPlusIncr
   0052 11 12 00            220 	ld	de,#_Hero + 0 + 12
                            221 ; genAssign (pointer)
   0055 3E 7E               222 	ld	a,#0x7E
   0057 12                  223 	ld	(de),a
                            224 ; genPlus
                            225 ; genPlusIncr
   0058 11 13 00            226 	ld	de,#_Hero + 0 + 13
                            227 ; genAssign (pointer)
   005B 3E 42               228 	ld	a,#0x42
   005D 12                  229 	ld	(de),a
                            230 ; genPlus
                            231 ; genPlusIncr
   005E 11 14 00            232 	ld	de,#_Hero + 0 + 14
                            233 ; genAssign (pointer)
   0061 3E 7E               234 	ld	a,#0x7E
   0063 12                  235 	ld	(de),a
                            236 ; genPlus
                            237 ; genPlusIncr
   0064 11 15 00            238 	ld	de,#_Hero + 0 + 15
                            239 ; genAssign (pointer)
   0067 3E 7E               240 	ld	a,#0x7E
   0069 12                  241 	ld	(de),a
                            242 ; genPlus
                            243 ; genPlusIncr
   006A 11 16 00            244 	ld	de,#_Hero + 0 + 16
                            245 ; genAssign (pointer)
   006D 3E 7E               246 	ld	a,#0x7E
   006F 12                  247 	ld	(de),a
                            248 ; genPlus
                            249 ; genPlusIncr
   0070 11 17 00            250 	ld	de,#_Hero + 0 + 17
                            251 ; genAssign (pointer)
   0073 3E 7E               252 	ld	a,#0x7E
   0075 12                  253 	ld	(de),a
                            254 ; genPlus
                            255 ; genPlusIncr
   0076 11 18 00            256 	ld	de,#_Hero + 0 + 18
                            257 ; genAssign (pointer)
   0079 3E FF               258 	ld	a,#0xFF
   007B 12                  259 	ld	(de),a
                            260 ; genPlus
                            261 ; genPlusIncr
   007C 11 19 00            262 	ld	de,#_Hero + 0 + 19
                            263 ; genAssign (pointer)
   007F 3E 81               264 	ld	a,#0x81
   0081 12                  265 	ld	(de),a
                            266 ; genPlus
                            267 ; genPlusIncr
   0082 11 1A 00            268 	ld	de,#_Hero + 0 + 20
                            269 ; genAssign (pointer)
   0085 3E FF               270 	ld	a,#0xFF
   0087 12                  271 	ld	(de),a
                            272 ; genPlus
                            273 ; genPlusIncr
   0088 11 1B 00            274 	ld	de,#_Hero + 0 + 21
                            275 ; genAssign (pointer)
   008B 3E A5               276 	ld	a,#0xA5
   008D 12                  277 	ld	(de),a
                            278 ; genPlus
                            279 ; genPlusIncr
   008E 11 1C 00            280 	ld	de,#_Hero + 0 + 22
                            281 ; genAssign (pointer)
   0091 3E FF               282 	ld	a,#0xFF
   0093 12                  283 	ld	(de),a
                            284 ; genPlus
                            285 ; genPlusIncr
   0094 11 1D 00            286 	ld	de,#_Hero + 0 + 23
                            287 ; genAssign (pointer)
   0097 3E A5               288 	ld	a,#0xA5
   0099 12                  289 	ld	(de),a
                            290 ; genPlus
                            291 ; genPlusIncr
   009A 11 1E 00            292 	ld	de,#_Hero + 0 + 24
                            293 ; genAssign (pointer)
   009D 3E FF               294 	ld	a,#0xFF
   009F 12                  295 	ld	(de),a
                            296 ; genPlus
                            297 ; genPlusIncr
   00A0 11 1F 00            298 	ld	de,#_Hero + 0 + 25
                            299 ; genAssign (pointer)
   00A3 3E C3               300 	ld	a,#0xC3
   00A5 12                  301 	ld	(de),a
                            302 ; genPlus
                            303 ; genPlusIncr
   00A6 11 20 00            304 	ld	de,#_Hero + 0 + 26
                            305 ; genAssign (pointer)
   00A9 3E 7E               306 	ld	a,#0x7E
   00AB 12                  307 	ld	(de),a
                            308 ; genPlus
                            309 ; genPlusIncr
   00AC 11 21 00            310 	ld	de,#_Hero + 0 + 27
                            311 ; genAssign (pointer)
   00AF 3E 5A               312 	ld	a,#0x5A
   00B1 12                  313 	ld	(de),a
                            314 ; genPlus
                            315 ; genPlusIncr
   00B2 11 22 00            316 	ld	de,#_Hero + 0 + 28
                            317 ; genAssign (pointer)
   00B5 3E FF               318 	ld	a,#0xFF
   00B7 12                  319 	ld	(de),a
                            320 ; genPlus
                            321 ; genPlusIncr
   00B8 11 23 00            322 	ld	de,#_Hero + 0 + 29
                            323 ; genAssign (pointer)
   00BB 3E 99               324 	ld	a,#0x99
   00BD 12                  325 	ld	(de),a
                            326 ; genPlus
                            327 ; genPlusIncr
   00BE 11 24 00            328 	ld	de,#_Hero + 0 + 30
                            329 ; genAssign (pointer)
   00C1 3E 7E               330 	ld	a,#0x7E
   00C3 12                  331 	ld	(de),a
                            332 ; genPlus
                            333 ; genPlusIncr
   00C4 11 25 00            334 	ld	de,#_Hero + 0 + 31
                            335 ; genAssign (pointer)
   00C7 3E 42               336 	ld	a,#0x42
   00C9 12                  337 	ld	(de),a
                            338 ;--------------------------------------------------------
                            339 ; Home
                            340 ;--------------------------------------------------------
                            341 	.area _HOME
                            342 	.area _CODE
                            343 ;--------------------------------------------------------
                            344 ; code
                            345 ;--------------------------------------------------------
                            346 	.area _CODE
                            347 ;	main.c 28
                            348 ; genLabel
                            349 ; genFunction
                            350 ;	---------------------------------
                            351 ; Function perfDelay
                            352 ; ---------------------------------
   0000                     353 ___perfDelay_start:
   0000                     354 _perfDelay:
   0000 C5                  355 	push	bc
                            356 	
                            357 ;	main.c 30
                            358 ; genAssign
   0001 0E 00               359 	ld	c,#0x00
                            360 ; genLabel
   0003                     361 00101$:
                            362 ; genCmpLt
                            363 ; AOP_STK for 
   0003 AF                  364 	xor	a,a
   0004 79                  365 	ld	a,c
   0005 F8 04               366 	lda	hl,4(sp)
   0007 9E                  367 	sbc	a,(hl) ; 2
   0008 D2 12 00            368 	jp	nc,00105$
                            369 ;	main.c 31
                            370 ; genCall
   000B CD 00 00            371 	call	_wait_vbl_done
                            372 ;	main.c 30
                            373 ; genPlus
                            374 ; genPlusIncr
   000E 0C                  375 	inc	c
                            376 ; genGoto
   000F C3 03 00            377 	jp	00101$
                            378 ; genLabel
   0012                     379 00105$:
                            380 ; genEndFunction
                            381 	
   0012 C1                  382 	pop	bc
   0013 C9                  383 	ret
   0014                     384 ___perfDelay_end:
                            385 ;	main.c 38
                            386 ; genLabel
                            387 ; genFunction
                            388 ;	---------------------------------
                            389 ; Function detecSurface
                            390 ; ---------------------------------
   0014                     391 ___detecSurface_start:
   0014                     392 _detecSurface:
   0014 C5                  393 	push	bc
                            394 	
                            395 ;	main.c 39
                            396 ; genCmpLt
                            397 ; AOP_STK for 
                            398 ; AOP_HL for _floorYPos
   0015 AF                  399 	xor	a,a
   0016 F8 04               400 	lda	hl,4(sp)
   0018 7E                  401 	ld	a,(hl)
   0019 21 05 00            402 	ld	hl,#_floorYPos + 0
   001C 9E                  403 	sbc	a,(hl) ; 2
   001D DA 25 00            404 	jp	c,00102$
                            405 ;	main.c 40
                            406 ; genAssign
                            407 ; AOP_HL for _floorYPos
   0020 4E                  408 	ld	c,(hl)
                            409 ; genRet
   0021 59                  410 	ld	e,c
   0022 C3 27 00            411 	jp	00103$
                            412 ; genLabel
   0025                     413 00102$:
                            414 ;	main.c 42
                            415 ; genRet
   0025 1E FF               416 	ld	e,#0xFF
                            417 ; genLabel
   0027                     418 00103$:
                            419 ; genEndFunction
                            420 	
   0027 C1                  421 	pop	bc
   0028 C9                  422 	ret
   0029                     423 ___detecSurface_end:
                            424 ;	main.c 49
                            425 ; genLabel
                            426 ; genFunction
                            427 ;	---------------------------------
                            428 ; Function jump
                            429 ; ---------------------------------
   0029                     430 ___jump_start:
   0029                     431 _jump:
   0029 C5                  432 	push	bc
   002A E8 FD               433 	lda	sp,-3(sp)
                            434 ;	main.c 52
                            435 ; genCmpEq
                            436 ; AOP_HL for _jumping
   002C 21 02 00            437 	ld	hl,#_jumping + 0
   002F 7E                  438 	ld	a,(hl)
   0030 B7                  439 	or	a,a
   0031 C2 36 00            440 	jp	nz,00110$
   0034 18 03               441 	jr	00111$
   0036                     442 00110$:
   0036 C3 43 00            443 	jp	00102$
   0039                     444 00111$:
                            445 ;	main.c 53
                            446 ; genAssign
                            447 ; AOP_HL for _jumping
   0039 21 02 00            448 	ld	hl,#_jumping + 0
   003C 36 01               449 	ld	(hl),#0x01
                            450 ;	main.c 54
                            451 ; genAssign
                            452 ; AOP_HL for _currSpeedY
   003E 21 03 00            453 	ld	hl,#_currSpeedY + 0
   0041 36 0E               454 	ld	(hl),#0x0E
                            455 ; genLabel
   0043                     456 00102$:
                            457 ;	main.c 60
                            458 ; genPlus
                            459 ; AOP_HL for _currSpeedY
                            460 ; AOP_HL for _gravity
                            461 ;	genPlusIncr failed
   0043 21 03 00            462 	ld	hl,#_currSpeedY + 0
   0046 7E                  463 	ld	a,(hl)
   0047 21 04 00            464 	ld	hl,#_gravity + 0
   004A 86                  465 	add	a,(hl)
   004B 21 03 00            466 	ld	hl,#_currSpeedY + 0
   004E 77                  467 	ld	(hl),a
                            468 ;	main.c 61
                            469 ; genPlus
                            470 ; AOP_STK for 
                            471 ; AOP_STK for _jump_sloc1_1_0
                            472 ; genPlusIncr
                            473 ;	genPlusIncr failed
   004F F8 08               474 	lda	hl,8(sp)
   0051 5E                  475 	ld	e,(hl)
   0052 23                  476 	inc	hl
   0053 56                  477 	ld	d,(hl)
   0054 21 01 00            478 	ld	hl,#0x0001
   0057 19                  479 	add	hl,de
   0058 7D                  480 	ld	a,l
   0059 54                  481 	ld	d,h
   005A F8 00               482 	lda	hl,0(sp)
   005C 22                  483 	ld	(hl+),a
   005D 72                  484 	ld	(hl),d
                            485 ; genPointerGet
                            486 ; AOP_STK for _jump_sloc1_1_0
                            487 ; AOP_STK for _jump_sloc0_1_0
   005E 2B                  488 	dec	hl
   005F 5E                  489 	ld	e,(hl)
   0060 23                  490 	inc	hl
   0061 56                  491 	ld	d,(hl)
   0062 1A                  492 	ld	a,(de)
   0063 23                  493 	inc	hl
   0064 77                  494 	ld	(hl),a
                            495 ; genMinus
                            496 ; AOP_STK for _jump_sloc0_1_0
                            497 ; AOP_HL for _currSpeedY
   0065 7E                  498 	ld	a,(hl)
   0066 21 03 00            499 	ld	hl,#_currSpeedY + 0
   0069 96                  500 	sub	a,(hl)
   006A 4F                  501 	ld	c,a
                            502 ; genAssign (pointer)
                            503 ; AOP_STK for _jump_sloc1_1_0
   006B F8 00               504 	lda	hl,0(sp)
   006D 5E                  505 	ld	e,(hl)
   006E 23                  506 	inc	hl
   006F 56                  507 	ld	d,(hl)
   0070 79                  508 	ld	a,c
   0071 12                  509 	ld	(de),a
                            510 ;	main.c 63
                            511 ; genIpush
   0072 79                  512 	ld	a,c
   0073 F5                  513 	push	af
   0074 33                  514 	inc	sp
                            515 ; genCall
   0075 CD 14 00            516 	call	_detecSurface
   0078 4B                  517 	ld	c,e
   0079 E8 01               518 	lda	sp,1(sp)
                            519 ;	main.c 65
                            520 ; genCmpGt
   007B 1E 7F               521 	ld	e,#0x7F
   007D 79                  522 	ld	a,c
   007E EE 80               523 	xor	a,#0x80
   0080 57                  524 	ld	d,a
   0081 7B                  525 	ld	a,e
   0082 9A                  526 	sbc	a,d
   0083 D2 A5 00            527 	jp	nc,00104$
                            528 ;	main.c 66
                            529 ; genAssign
                            530 ; AOP_HL for _jumping
   0086 21 02 00            531 	ld	hl,#_jumping + 0
   0089 36 00               532 	ld	(hl),#0x00
                            533 ;	main.c 67
                            534 ; genAssign
                            535 ; (registers are the same)
                            536 ; genAssign
                            537 ; AOP_STK for 
   008B F8 08               538 	lda	hl,8(sp)
   008D 5E                  539 	ld	e,(hl)
   008E 23                  540 	inc	hl
   008F 56                  541 	ld	d,(hl)
                            542 ; genPointerGet
   0090 1A                  543 	ld	a,(de)
   0091 47                  544 	ld	b,a
                            545 ; genIpush
   0092 79                  546 	ld	a,c
   0093 F5                  547 	push	af
   0094 33                  548 	inc	sp
                            549 ; genIpush
   0095 78                  550 	ld	a,b
   0096 F5                  551 	push	af
   0097 33                  552 	inc	sp
                            553 ; genIpush
                            554 ; AOP_STK for 
   0098 2B                  555 	dec	hl
   0099 2B                  556 	dec	hl
   009A 7E                  557 	ld	a,(hl)
   009B F5                  558 	push	af
   009C 33                  559 	inc	sp
                            560 ; genCall
   009D CD 00 00            561 	call	_move_sprite
   00A0 E8 03               562 	lda	sp,3(sp)
                            563 ; genGoto
   00A2 C3 C3 00            564 	jp	00106$
                            565 ; genLabel
   00A5                     566 00104$:
                            567 ;	main.c 69
                            568 ; genPointerGet
                            569 ; AOP_STK for _jump_sloc1_1_0
   00A5 F8 00               570 	lda	hl,0(sp)
   00A7 5E                  571 	ld	e,(hl)
   00A8 23                  572 	inc	hl
   00A9 56                  573 	ld	d,(hl)
   00AA 1A                  574 	ld	a,(de)
   00AB 4F                  575 	ld	c,a
                            576 ; genAssign
                            577 ; AOP_STK for 
   00AC F8 08               578 	lda	hl,8(sp)
   00AE 5E                  579 	ld	e,(hl)
   00AF 23                  580 	inc	hl
   00B0 56                  581 	ld	d,(hl)
                            582 ; genPointerGet
   00B1 1A                  583 	ld	a,(de)
   00B2 47                  584 	ld	b,a
                            585 ; genIpush
   00B3 79                  586 	ld	a,c
   00B4 F5                  587 	push	af
   00B5 33                  588 	inc	sp
                            589 ; genIpush
   00B6 78                  590 	ld	a,b
   00B7 F5                  591 	push	af
   00B8 33                  592 	inc	sp
                            593 ; genIpush
                            594 ; AOP_STK for 
   00B9 2B                  595 	dec	hl
   00BA 2B                  596 	dec	hl
   00BB 7E                  597 	ld	a,(hl)
   00BC F5                  598 	push	af
   00BD 33                  599 	inc	sp
                            600 ; genCall
   00BE CD 00 00            601 	call	_move_sprite
   00C1 E8 03               602 	lda	sp,3(sp)
                            603 ; genLabel
   00C3                     604 00106$:
                            605 ; genEndFunction
   00C3 E8 03               606 	lda	sp,3(sp)
   00C5 C1                  607 	pop	bc
   00C6 C9                  608 	ret
   00C7                     609 ___jump_end:
                            610 ;	main.c 74
                            611 ; genLabel
                            612 ; genFunction
                            613 ;	---------------------------------
                            614 ; Function main
                            615 ; ---------------------------------
   00C7                     616 ___main_start:
   00C7                     617 _main:
   00C7 C5                  618 	push	bc
                            619 	
                            620 ;	main.c 75
                            621 ; genAssign (pointer)
   00C8 11 00 00            622 	ld	de,#_playerlocation + 0
   00CB 3E 54               623 	ld	a,#0x54
   00CD 12                  624 	ld	(de),a
                            625 ;	main.c 76
                            626 ; genPlus
                            627 ; genPlusIncr
   00CE 11 01 00            628 	ld	de,#_playerlocation + 0 + 1
                            629 ; genAssign
                            630 ; AOP_HL for _floorYPos
   00D1 21 05 00            631 	ld	hl,#_floorYPos + 0
   00D4 4E                  632 	ld	c,(hl)
                            633 ; genAssign (pointer)
   00D5 79                  634 	ld	a,c
   00D6 12                  635 	ld	(de),a
                            636 ;	main.c 77
                            637 ; genAssign
                            638 ; AOP_HL for _jumping
   00D7 21 02 00            639 	ld	hl,#_jumping + 0
   00DA 36 00               640 	ld	(hl),#0x00
                            641 ;	main.c 80
                            642 ; genIpush
   00DC 21 06 00            643 	ld	hl,#_Hero + 0
   00DF E5                  644 	push	hl
                            645 ; genIpush
   00E0 3E 02               646 	ld	a,#0x02
   00E2 F5                  647 	push	af
   00E3 33                  648 	inc	sp
                            649 ; genIpush
   00E4 3E 00               650 	ld	a,#0x00
   00E6 F5                  651 	push	af
   00E7 33                  652 	inc	sp
                            653 ; genCall
   00E8 CD 00 00            654 	call	_set_sprite_data
   00EB E8 04               655 	lda	sp,4(sp)
                            656 ;	main.c 81
                            657 ; genIpush
   00ED 3E 00               658 	ld	a,#0x00
   00EF F5                  659 	push	af
   00F0 33                  660 	inc	sp
                            661 ; genIpush
   00F1 3E 00               662 	ld	a,#0x00
   00F3 F5                  663 	push	af
   00F4 33                  664 	inc	sp
                            665 ; genCall
   00F5 CD 00 00            666 	call	_set_sprite_tile
   00F8 E8 02               667 	lda	sp,2(sp)
                            668 ;	main.c 82
                            669 ; genPointerGet
   00FA 11 00 00            670 	ld	de,#_playerlocation + 0
   00FD 1A                  671 	ld	a,(de)
   00FE 47                  672 	ld	b,a
                            673 ; genIpush
   00FF 79                  674 	ld	a,c
   0100 F5                  675 	push	af
   0101 33                  676 	inc	sp
                            677 ; genIpush
   0102 78                  678 	ld	a,b
   0103 F5                  679 	push	af
   0104 33                  680 	inc	sp
                            681 ; genIpush
   0105 3E 00               682 	ld	a,#0x00
   0107 F5                  683 	push	af
   0108 33                  684 	inc	sp
                            685 ; genCall
   0109 CD 00 00            686 	call	_move_sprite
   010C E8 03               687 	lda	sp,3(sp)
                            688 ;	main.c 85
                            689 ; genIpush
   010E 3E 01               690 	ld	a,#0x01
   0110 F5                  691 	push	af
   0111 33                  692 	inc	sp
                            693 ; genIpush
   0112 3E 01               694 	ld	a,#0x01
   0114 F5                  695 	push	af
   0115 33                  696 	inc	sp
                            697 ; genCall
   0116 CD 00 00            698 	call	_set_sprite_tile
   0119 E8 02               699 	lda	sp,2(sp)
                            700 ;	main.c 86
                            701 ; genIpush
   011B 3E 50               702 	ld	a,#0x50
   011D F5                  703 	push	af
   011E 33                  704 	inc	sp
                            705 ; genIpush
   011F 3E 40               706 	ld	a,#0x40
   0121 F5                  707 	push	af
   0122 33                  708 	inc	sp
                            709 ; genIpush
   0123 3E 01               710 	ld	a,#0x01
   0125 F5                  711 	push	af
   0126 33                  712 	inc	sp
                            713 ; genCall
   0127 CD 00 00            714 	call	_move_sprite
   012A E8 03               715 	lda	sp,3(sp)
                            716 ;	main.c 88
                            717 ; genOr
                            718 ; AOP_SFR for _LCDC_REG
                            719 ; Type res[4] = l[4]&r[1]
                            720 ; Size res[1] = l[1]&r[1]
   012C F0 00               721 	ldh	a,(_LCDC_REG+0) ; x
   012E F6 80               722 	or	a,#0x80
   0130 E0 00               723 	ldh	(_LCDC_REG+0),a
                            724 ;	main.c 89
                            725 ; genOr
                            726 ; AOP_SFR for _LCDC_REG
                            727 ; Type res[4] = l[4]&r[1]
                            728 ; Size res[1] = l[1]&r[1]
   0132 F0 00               729 	ldh	a,(_LCDC_REG+0) ; x
   0134 F6 02               730 	or	a,#0x02
   0136 E0 00               731 	ldh	(_LCDC_REG+0),a
                            732 ;	main.c 91
                            733 ; genLabel
   0138                     734 00109$:
                            735 ;	main.c 93
                            736 ; genCall
   0138 CD 00 00            737 	call	_joypad
   013B 4B                  738 	ld	c,e
                            739 ; genAnd
   013C 79                  740 	ld	a,c
   013D CB 6F               741 	bit	5,a
   013F C2 50 01            742 	jp	nz,00101$
                            743 ; genCmpEq
                            744 ; AOP_HL for _jumping
   0142 21 02 00            745 	ld	hl,#_jumping + 0
   0145 7E                  746 	ld	a,(hl) ; 2
   0146 FE 01               747 	cp	a,#0x01
   0148 C2 4D 01            748 	jp	nz,00117$
   014B 18 03               749 	jr	00118$
   014D                     750 00117$:
   014D C3 5D 01            751 	jp	00102$
   0150                     752 00118$:
                            753 ; genLabel
   0150                     754 00101$:
                            755 ;	main.c 94
                            756 ; genIpush
   0150 21 00 00            757 	ld	hl,#_playerlocation + 0
   0153 E5                  758 	push	hl
                            759 ; genIpush
   0154 3E 00               760 	ld	a,#0x00
   0156 F5                  761 	push	af
   0157 33                  762 	inc	sp
                            763 ; genCall
   0158 CD 29 00            764 	call	_jump
   015B E8 03               765 	lda	sp,3(sp)
                            766 ; genLabel
   015D                     767 00102$:
                            768 ;	main.c 96
                            769 ; genCall
   015D CD 00 00            770 	call	_joypad
   0160 4B                  771 	ld	c,e
                            772 ; genAnd
   0161 79                  773 	ld	a,c
   0162 CB 4F               774 	bit	1,a
   0164 CA 89 01            775 	jp	z,00105$
                            776 ;	main.c 97
                            777 ; genPointerGet
   0167 11 00 00            778 	ld	de,#_playerlocation + 0
   016A 1A                  779 	ld	a,(de)
   016B 4F                  780 	ld	c,a
                            781 ; genMinus
   016C 79                  782 	ld	a,c
   016D C6 FC               783 	add	a,#0xFC
   016F 4F                  784 	ld	c,a
                            785 ; genAssign (pointer)
   0170 11 00 00            786 	ld	de,#_playerlocation + 0
   0173 79                  787 	ld	a,c
   0174 12                  788 	ld	(de),a
                            789 ;	main.c 98
                            790 ; genPlus
                            791 ; genPlusIncr
   0175 11 01 00            792 	ld	de,#_playerlocation + 0 + 1
                            793 ; genPointerGet
   0178 1A                  794 	ld	a,(de)
   0179 47                  795 	ld	b,a
                            796 ; genIpush
   017A 78                  797 	ld	a,b
   017B F5                  798 	push	af
   017C 33                  799 	inc	sp
                            800 ; genIpush
   017D 79                  801 	ld	a,c
   017E F5                  802 	push	af
   017F 33                  803 	inc	sp
                            804 ; genIpush
   0180 3E 00               805 	ld	a,#0x00
   0182 F5                  806 	push	af
   0183 33                  807 	inc	sp
                            808 ; genCall
   0184 CD 00 00            809 	call	_move_sprite
   0187 E8 03               810 	lda	sp,3(sp)
                            811 ; genLabel
   0189                     812 00105$:
                            813 ;	main.c 100
                            814 ; genCall
   0189 CD 00 00            815 	call	_joypad
   018C 4B                  816 	ld	c,e
                            817 ; genAnd
   018D 79                  818 	ld	a,c
   018E CB 47               819 	bit	0,a
   0190 CA B5 01            820 	jp	z,00107$
                            821 ;	main.c 101
                            822 ; genPointerGet
   0193 11 00 00            823 	ld	de,#_playerlocation + 0
   0196 1A                  824 	ld	a,(de)
   0197 4F                  825 	ld	c,a
                            826 ; genPlus
                            827 ; genPlusIncr
   0198 0C                  828 	inc	c
   0199 0C                  829 	inc	c
   019A 0C                  830 	inc	c
   019B 0C                  831 	inc	c
                            832 ; genAssign (pointer)
   019C 11 00 00            833 	ld	de,#_playerlocation + 0
   019F 79                  834 	ld	a,c
   01A0 12                  835 	ld	(de),a
                            836 ;	main.c 102
                            837 ; genPlus
                            838 ; genPlusIncr
   01A1 11 01 00            839 	ld	de,#_playerlocation + 0 + 1
                            840 ; genPointerGet
   01A4 1A                  841 	ld	a,(de)
   01A5 47                  842 	ld	b,a
                            843 ; genIpush
   01A6 78                  844 	ld	a,b
   01A7 F5                  845 	push	af
   01A8 33                  846 	inc	sp
                            847 ; genIpush
   01A9 79                  848 	ld	a,c
   01AA F5                  849 	push	af
   01AB 33                  850 	inc	sp
                            851 ; genIpush
   01AC 3E 00               852 	ld	a,#0x00
   01AE F5                  853 	push	af
   01AF 33                  854 	inc	sp
                            855 ; genCall
   01B0 CD 00 00            856 	call	_move_sprite
   01B3 E8 03               857 	lda	sp,3(sp)
                            858 ; genLabel
   01B5                     859 00107$:
                            860 ;	main.c 105
                            861 ; genIpush
   01B5 3E 05               862 	ld	a,#0x05
   01B7 F5                  863 	push	af
   01B8 33                  864 	inc	sp
                            865 ; genCall
   01B9 CD 00 00            866 	call	_perfDelay
   01BC E8 01               867 	lda	sp,1(sp)
                            868 ; genGoto
   01BE C3 38 01            869 	jp	00109$
                            870 ; genLabel
   01C1                     871 00111$:
                            872 ; genEndFunction
                            873 	
   01C1 C1                  874 	pop	bc
   01C2 C9                  875 	ret
   01C3                     876 ___main_end:
                            877 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
  1 _Hero                              0006 GR
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___detecSurface_end                0029 R
  0 ___detecSurface_start              0014 R
  0 ___jump_end                        00C7 R
  0 ___jump_start                      0029 R
  0 ___main_end                        01C3 R
  0 ___main_start                      00C7 R
  0 ___perfDelay_end                   0014 R
  0 ___perfDelay_start                 0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  1 _currSpeedY                        0003 GR
  0 _detecSurface                      0014 GR
  1 _floorYPos                         0005 GR
  1 _gravity                           0004 GR
    _joypad                            **** GX
  0 _jump                              0029 GR
  1 _jumping                           0002 GR
  0 _main                              00C7 GR
    _move_sprite                       **** GX
  0 _perfDelay                         0000 GR
  1 _playerlocation                    0000 GR
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
    _sys_time                          **** GX
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  1C3   flags 0
   1 _DATA                              size   26   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   CA   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
