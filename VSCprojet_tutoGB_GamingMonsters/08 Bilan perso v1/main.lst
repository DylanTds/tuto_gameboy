                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Mon May 31 14:47:50 2021
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc63920
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _jump
                             13 	.globl _checkScreenLimit
                             14 	.globl _perfDelay
                             15 	.globl _printf
                             16 	.globl _move_sprite
                             17 	.globl _set_sprite_tile
                             18 	.globl _set_sprite_data
                             19 	.globl _wait_vbl_done
                             20 	.globl _joypad
                             21 	.globl _Hero
                             22 	.globl _gravity
                             23 	.globl _currSpeedY
                             24 	.globl _playerlocation
                             25 	.globl _jumping
                             26 	.globl _main
                             27 	.globl _jump
                             28 	.globl _checkScreenLimit
                             29 	.globl _perfDelay
                             30 ;--------------------------------------------------------
                             31 ; Externals used
                             32 ;--------------------------------------------------------
                             33 	.globl _IE_REG
                             34 	.globl _SVBK_REG
                             35 	.globl _OCPD_REG
                             36 	.globl _OCPS_REG
                             37 	.globl _BCPD_REG
                             38 	.globl _BCPS_REG
                             39 	.globl _RP_REG
                             40 	.globl _HDMA5_REG
                             41 	.globl _HDMA4_REG
                             42 	.globl _HDMA3_REG
                             43 	.globl _HDMA2_REG
                             44 	.globl _HDMA1_REG
                             45 	.globl _VBK_REG
                             46 	.globl _KEY1_REG
                             47 	.globl _WX_REG
                             48 	.globl _WY_REG
                             49 	.globl _OBP1_REG
                             50 	.globl _OBP0_REG
                             51 	.globl _BGP_REG
                             52 	.globl _DMA_REG
                             53 	.globl _LYC_REG
                             54 	.globl _LY_REG
                             55 	.globl _SCX_REG
                             56 	.globl _SCY_REG
                             57 	.globl _STAT_REG
                             58 	.globl _LCDC_REG
                             59 	.globl _NR52_REG
                             60 	.globl _NR51_REG
                             61 	.globl _NR50_REG
                             62 	.globl _NR44_REG
                             63 	.globl _NR43_REG
                             64 	.globl _NR42_REG
                             65 	.globl _NR41_REG
                             66 	.globl _NR34_REG
                             67 	.globl _NR33_REG
                             68 	.globl _NR32_REG
                             69 	.globl _NR31_REG
                             70 	.globl _NR30_REG
                             71 	.globl _NR24_REG
                             72 	.globl _NR23_REG
                             73 	.globl _NR22_REG
                             74 	.globl _NR21_REG
                             75 	.globl _NR14_REG
                             76 	.globl _NR13_REG
                             77 	.globl _NR12_REG
                             78 	.globl _NR11_REG
                             79 	.globl _NR10_REG
                             80 	.globl _IF_REG
                             81 	.globl _TAC_REG
                             82 	.globl _TMA_REG
                             83 	.globl _TIMA_REG
                             84 	.globl _DIV_REG
                             85 	.globl _SC_REG
                             86 	.globl _SB_REG
                             87 	.globl _P1_REG
                             88 	.globl __io_out
                             89 	.globl __io_in
                             90 	.globl __io_status
                             91 	.globl _sys_time
                             92 	.globl __cpu
                             93 ;--------------------------------------------------------
                             94 ; special function registers
                             95 ;--------------------------------------------------------
                             96 ;--------------------------------------------------------
                             97 ; special function bits 
                             98 ;--------------------------------------------------------
                             99 ;--------------------------------------------------------
                            100 ; internal ram data
                            101 ;--------------------------------------------------------
                            102 	.area _DATA
   0000                     103 _jumping::
   0000                     104 	.ds 1
   0001                     105 _playerlocation::
   0001                     106 	.ds 2
   0003                     107 _currSpeedY::
   0003                     108 	.ds 1
   0004                     109 _gravity::
   0004                     110 	.ds 1
   0005                     111 _Hero::
   0005                     112 	.ds 32
                            113 ;--------------------------------------------------------
                            114 ; overlayable items in internal ram 
                            115 ;--------------------------------------------------------
                            116 	.area _OVERLAY
                            117 ;--------------------------------------------------------
                            118 ; indirectly addressable internal ram data
                            119 ;--------------------------------------------------------
                            120 	.area _ISEG
                            121 ;--------------------------------------------------------
                            122 ; bit data
                            123 ;--------------------------------------------------------
                            124 	.area _BSEG
                            125 ;--------------------------------------------------------
                            126 ; external ram data
                            127 ;--------------------------------------------------------
                            128 	.area _XSEG
                            129 ;--------------------------------------------------------
                            130 ; global & static initialisations
                            131 ;--------------------------------------------------------
                            132 	.area _GSINIT
                            133 	.area _GSFINAL
                            134 	.area _GSINIT
                            135 ;	main.c 110
                            136 ; genAssign
                            137 ; AOP_HL for _gravity
   0000 21 04 00            138 	ld	hl,#_gravity + 0
   0003 36 FE               139 	ld	(hl),#0xFE
                            140 ;	main.c 110
                            141 ; genAssign (pointer)
   0005 11 05 00            142 	ld	de,#_Hero + 0
   0008 3E FF               143 	ld	a,#0xFF
   000A 12                  144 	ld	(de),a
                            145 ; genPlus
                            146 ; genPlusIncr
   000B 11 06 00            147 	ld	de,#_Hero + 0 + 1
                            148 ; genAssign (pointer)
   000E 3E FF               149 	ld	a,#0xFF
   0010 12                  150 	ld	(de),a
                            151 ; genPlus
                            152 ; genPlusIncr
   0011 11 07 00            153 	ld	de,#_Hero + 0 + 2
                            154 ; genAssign (pointer)
   0014 3E FF               155 	ld	a,#0xFF
   0016 12                  156 	ld	(de),a
                            157 ; genPlus
                            158 ; genPlusIncr
   0017 11 08 00            159 	ld	de,#_Hero + 0 + 3
                            160 ; genAssign (pointer)
   001A 3E 81               161 	ld	a,#0x81
   001C 12                  162 	ld	(de),a
                            163 ; genPlus
                            164 ; genPlusIncr
   001D 11 09 00            165 	ld	de,#_Hero + 0 + 4
                            166 ; genAssign (pointer)
   0020 3E FF               167 	ld	a,#0xFF
   0022 12                  168 	ld	(de),a
                            169 ; genPlus
                            170 ; genPlusIncr
   0023 11 0A 00            171 	ld	de,#_Hero + 0 + 5
                            172 ; genAssign (pointer)
   0026 3E A5               173 	ld	a,#0xA5
   0028 12                  174 	ld	(de),a
                            175 ; genPlus
                            176 ; genPlusIncr
   0029 11 0B 00            177 	ld	de,#_Hero + 0 + 6
                            178 ; genAssign (pointer)
   002C 3E FF               179 	ld	a,#0xFF
   002E 12                  180 	ld	(de),a
                            181 ; genPlus
                            182 ; genPlusIncr
   002F 11 0C 00            183 	ld	de,#_Hero + 0 + 7
                            184 ; genAssign (pointer)
   0032 3E C3               185 	ld	a,#0xC3
   0034 12                  186 	ld	(de),a
                            187 ; genPlus
                            188 ; genPlusIncr
   0035 11 0D 00            189 	ld	de,#_Hero + 0 + 8
                            190 ; genAssign (pointer)
   0038 3E 66               191 	ld	a,#0x66
   003A 12                  192 	ld	(de),a
                            193 ; genPlus
                            194 ; genPlusIncr
   003B 11 0E 00            195 	ld	de,#_Hero + 0 + 9
                            196 ; genAssign (pointer)
   003E 3E 5A               197 	ld	a,#0x5A
   0040 12                  198 	ld	(de),a
                            199 ; genPlus
                            200 ; genPlusIncr
   0041 11 0F 00            201 	ld	de,#_Hero + 0 + 10
                            202 ; genAssign (pointer)
   0044 3E FF               203 	ld	a,#0xFF
   0046 12                  204 	ld	(de),a
                            205 ; genPlus
                            206 ; genPlusIncr
   0047 11 10 00            207 	ld	de,#_Hero + 0 + 11
                            208 ; genAssign (pointer)
   004A 3E 81               209 	ld	a,#0x81
   004C 12                  210 	ld	(de),a
                            211 ; genPlus
                            212 ; genPlusIncr
   004D 11 11 00            213 	ld	de,#_Hero + 0 + 12
                            214 ; genAssign (pointer)
   0050 3E 7E               215 	ld	a,#0x7E
   0052 12                  216 	ld	(de),a
                            217 ; genPlus
                            218 ; genPlusIncr
   0053 11 12 00            219 	ld	de,#_Hero + 0 + 13
                            220 ; genAssign (pointer)
   0056 3E 42               221 	ld	a,#0x42
   0058 12                  222 	ld	(de),a
                            223 ; genPlus
                            224 ; genPlusIncr
   0059 11 13 00            225 	ld	de,#_Hero + 0 + 14
                            226 ; genAssign (pointer)
   005C 3E 7E               227 	ld	a,#0x7E
   005E 12                  228 	ld	(de),a
                            229 ; genPlus
                            230 ; genPlusIncr
   005F 11 14 00            231 	ld	de,#_Hero + 0 + 15
                            232 ; genAssign (pointer)
   0062 3E 7E               233 	ld	a,#0x7E
   0064 12                  234 	ld	(de),a
                            235 ; genPlus
                            236 ; genPlusIncr
   0065 11 15 00            237 	ld	de,#_Hero + 0 + 16
                            238 ; genAssign (pointer)
   0068 3E 7E               239 	ld	a,#0x7E
   006A 12                  240 	ld	(de),a
                            241 ; genPlus
                            242 ; genPlusIncr
   006B 11 16 00            243 	ld	de,#_Hero + 0 + 17
                            244 ; genAssign (pointer)
   006E 3E 7E               245 	ld	a,#0x7E
   0070 12                  246 	ld	(de),a
                            247 ; genPlus
                            248 ; genPlusIncr
   0071 11 17 00            249 	ld	de,#_Hero + 0 + 18
                            250 ; genAssign (pointer)
   0074 3E FF               251 	ld	a,#0xFF
   0076 12                  252 	ld	(de),a
                            253 ; genPlus
                            254 ; genPlusIncr
   0077 11 18 00            255 	ld	de,#_Hero + 0 + 19
                            256 ; genAssign (pointer)
   007A 3E 81               257 	ld	a,#0x81
   007C 12                  258 	ld	(de),a
                            259 ; genPlus
                            260 ; genPlusIncr
   007D 11 19 00            261 	ld	de,#_Hero + 0 + 20
                            262 ; genAssign (pointer)
   0080 3E FF               263 	ld	a,#0xFF
   0082 12                  264 	ld	(de),a
                            265 ; genPlus
                            266 ; genPlusIncr
   0083 11 1A 00            267 	ld	de,#_Hero + 0 + 21
                            268 ; genAssign (pointer)
   0086 3E A5               269 	ld	a,#0xA5
   0088 12                  270 	ld	(de),a
                            271 ; genPlus
                            272 ; genPlusIncr
   0089 11 1B 00            273 	ld	de,#_Hero + 0 + 22
                            274 ; genAssign (pointer)
   008C 3E FF               275 	ld	a,#0xFF
   008E 12                  276 	ld	(de),a
                            277 ; genPlus
                            278 ; genPlusIncr
   008F 11 1C 00            279 	ld	de,#_Hero + 0 + 23
                            280 ; genAssign (pointer)
   0092 3E A5               281 	ld	a,#0xA5
   0094 12                  282 	ld	(de),a
                            283 ; genPlus
                            284 ; genPlusIncr
   0095 11 1D 00            285 	ld	de,#_Hero + 0 + 24
                            286 ; genAssign (pointer)
   0098 3E FF               287 	ld	a,#0xFF
   009A 12                  288 	ld	(de),a
                            289 ; genPlus
                            290 ; genPlusIncr
   009B 11 1E 00            291 	ld	de,#_Hero + 0 + 25
                            292 ; genAssign (pointer)
   009E 3E C3               293 	ld	a,#0xC3
   00A0 12                  294 	ld	(de),a
                            295 ; genPlus
                            296 ; genPlusIncr
   00A1 11 1F 00            297 	ld	de,#_Hero + 0 + 26
                            298 ; genAssign (pointer)
   00A4 3E 7E               299 	ld	a,#0x7E
   00A6 12                  300 	ld	(de),a
                            301 ; genPlus
                            302 ; genPlusIncr
   00A7 11 20 00            303 	ld	de,#_Hero + 0 + 27
                            304 ; genAssign (pointer)
   00AA 3E 5A               305 	ld	a,#0x5A
   00AC 12                  306 	ld	(de),a
                            307 ; genPlus
                            308 ; genPlusIncr
   00AD 11 21 00            309 	ld	de,#_Hero + 0 + 28
                            310 ; genAssign (pointer)
   00B0 3E FF               311 	ld	a,#0xFF
   00B2 12                  312 	ld	(de),a
                            313 ; genPlus
                            314 ; genPlusIncr
   00B3 11 22 00            315 	ld	de,#_Hero + 0 + 29
                            316 ; genAssign (pointer)
   00B6 3E 99               317 	ld	a,#0x99
   00B8 12                  318 	ld	(de),a
                            319 ; genPlus
                            320 ; genPlusIncr
   00B9 11 23 00            321 	ld	de,#_Hero + 0 + 30
                            322 ; genAssign (pointer)
   00BC 3E 7E               323 	ld	a,#0x7E
   00BE 12                  324 	ld	(de),a
                            325 ; genPlus
                            326 ; genPlusIncr
   00BF 11 24 00            327 	ld	de,#_Hero + 0 + 31
                            328 ; genAssign (pointer)
   00C2 3E 42               329 	ld	a,#0x42
   00C4 12                  330 	ld	(de),a
                            331 ;--------------------------------------------------------
                            332 ; Home
                            333 ;--------------------------------------------------------
                            334 	.area _HOME
                            335 	.area _CODE
                            336 ;--------------------------------------------------------
                            337 ; code
                            338 ;--------------------------------------------------------
                            339 	.area _CODE
                            340 ;	main.c 20
                            341 ; genLabel
                            342 ; genFunction
                            343 ;	---------------------------------
                            344 ; Function perfDelay
                            345 ; ---------------------------------
   0000                     346 ___perfDelay_start:
   0000                     347 _perfDelay:
   0000 C5                  348 	push	bc
                            349 	
                            350 ;	main.c 22
                            351 ; genAssign
   0001 0E 00               352 	ld	c,#0x00
                            353 ; genLabel
   0003                     354 00101$:
                            355 ; genCmpLt
                            356 ; AOP_STK for 
   0003 AF                  357 	xor	a,a
   0004 79                  358 	ld	a,c
   0005 F8 04               359 	lda	hl,4(sp)
   0007 9E                  360 	sbc	a,(hl) ; 2
   0008 D2 12 00            361 	jp	nc,00105$
                            362 ;	main.c 23
                            363 ; genCall
   000B CD 00 00            364 	call	_wait_vbl_done
                            365 ;	main.c 22
                            366 ; genPlus
                            367 ; genPlusIncr
   000E 0C                  368 	inc	c
                            369 ; genGoto
   000F C3 03 00            370 	jp	00101$
                            371 ; genLabel
   0012                     372 00105$:
                            373 ; genEndFunction
                            374 	
   0012 C1                  375 	pop	bc
   0013 C9                  376 	ret
   0014                     377 ___perfDelay_end:
                            378 ;	main.c 33
                            379 ; genLabel
                            380 ; genFunction
                            381 ;	---------------------------------
                            382 ; Function checkScreenLimit
                            383 ; ---------------------------------
   0014                     384 ___checkScreenLimit_start:
   0014                     385 _checkScreenLimit:
   0014 C5                  386 	push	bc
   0015 E8 FF               387 	lda	sp,-1(sp)
                            388 ;	main.c 35
                            389 ; genPointerGet
   0017 11 01 00            390 	ld	de,#_playerlocation + 0
   001A 1A                  391 	ld	a,(de)
   001B 4F                  392 	ld	c,a
                            393 ; genCmpLt
   001C AF                  394 	xor	a,a
   001D 3E 08               395 	ld	a,#0x08
   001F 99                  396 	sbc	a,c ; 2
   0020 D2 3B 00            397 	jp	nc,00110$
                            398 ; genCmpLt
   0023 79                  399 	ld	a,c
   0024 FE A0               400 	cp	#0xA0
   0026 D2 3B 00            401 	jp	nc,00110$
                            402 ;	main.c 36
                            403 ; genPlus
                            404 ; genPlusIncr
   0029 11 02 00            405 	ld	de,#_playerlocation + 0 + 1
                            406 ; genPointerGet
   002C 1A                  407 	ld	a,(de)
   002D 47                  408 	ld	b,a
                            409 ; genCmpLt
   002E AF                  410 	xor	a,a
   002F 3E 10               411 	ld	a,#0x10
   0031 98                  412 	sbc	a,b ; 2
   0032 D2 3B 00            413 	jp	nc,00110$
                            414 ; genCmpLt
   0035 78                  415 	ld	a,b
   0036 FE 98               416 	cp	#0x98
   0038 DA 77 00            417 	jp	c,00115$
                            418 ; genLabel
   003B                     419 00110$:
                            420 ;	main.c 39
                            421 ; genCmpLt
   003B 79                  422 	ld	a,c
   003C FE 08               423 	cp	#0x08
   003E D2 47 00            424 	jp	nc,00102$
                            425 ;	main.c 40
                            426 ; genAssign (pointer)
   0041 11 01 00            427 	ld	de,#_playerlocation + 0
   0044 3E 08               428 	ld	a,#0x08
   0046 12                  429 	ld	(de),a
                            430 ; genLabel
   0047                     431 00102$:
                            432 ;	main.c 42
                            433 ; genPointerGet
   0047 11 01 00            434 	ld	de,#_playerlocation + 0
   004A 1A                  435 	ld	a,(de)
   004B 4F                  436 	ld	c,a
                            437 ; genCmpGt
   004C AF                  438 	xor	a,a
   004D 3E A0               439 	ld	a,#0xA0
   004F 99                  440 	sbc	a,c ; 2
   0050 D2 59 00            441 	jp	nc,00104$
                            442 ;	main.c 43
                            443 ; genAssign (pointer)
   0053 11 01 00            444 	ld	de,#_playerlocation + 0
   0056 3E A0               445 	ld	a,#0xA0
   0058 12                  446 	ld	(de),a
                            447 ; genLabel
   0059                     448 00104$:
                            449 ;	main.c 45
                            450 ; genPlus
                            451 ; genPlusIncr
   0059 01 02 00            452 	ld	bc,#_playerlocation + 0 + 1
                            453 ; genPointerGet
                            454 ; AOP_STK for _checkScreenLimit_sloc0_1_0
   005C 0A                  455 	ld	a,(bc)
   005D F8 00               456 	lda	hl,0(sp)
   005F 77                  457 	ld	(hl),a
                            458 ; genCmpLt
                            459 ; AOP_STK for _checkScreenLimit_sloc0_1_0
   0060 7E                  460 	ld	a,(hl)
   0061 FE 10               461 	cp	#0x10
   0063 D2 69 00            462 	jp	nc,00106$
                            463 ;	main.c 46
                            464 ; genAssign (pointer)
   0066 3E 10               465 	ld	a,#0x10
   0068 02                  466 	ld	(bc),a
                            467 ; genLabel
   0069                     468 00106$:
                            469 ;	main.c 48
                            470 ; genPointerGet
                            471 ; AOP_STK for _checkScreenLimit_sloc0_1_0
   0069 0A                  472 	ld	a,(bc)
   006A F8 00               473 	lda	hl,0(sp)
   006C 77                  474 	ld	(hl),a
                            475 ; genCmpGt
                            476 ; AOP_STK for _checkScreenLimit_sloc0_1_0
   006D AF                  477 	xor	a,a
   006E 3E 98               478 	ld	a,#0x98
   0070 9E                  479 	sbc	a,(hl) ; 2
   0071 D2 77 00            480 	jp	nc,00115$
                            481 ;	main.c 49
                            482 ; genAssign (pointer)
   0074 3E 98               483 	ld	a,#0x98
   0076 02                  484 	ld	(bc),a
                            485 ; genLabel
   0077                     486 00115$:
                            487 ; genEndFunction
   0077 E8 01               488 	lda	sp,1(sp)
   0079 C1                  489 	pop	bc
   007A C9                  490 	ret
   007B                     491 ___checkScreenLimit_end:
                            492 ;	main.c 55
                            493 ; genLabel
                            494 ; genFunction
                            495 ;	---------------------------------
                            496 ; Function jump
                            497 ; ---------------------------------
   007B                     498 ___jump_start:
   007B                     499 _jump:
   007B C5                  500 	push	bc
   007C E8 FD               501 	lda	sp,-3(sp)
                            502 ;	main.c 56
                            503 ; genCmpEq
                            504 ; AOP_HL for _jumping
   007E 21 00 00            505 	ld	hl,#_jumping + 0
   0081 7E                  506 	ld	a,(hl) ; 2
   0082 FE 01               507 	cp	a,#0x01
   0084 C2 89 00            508 	jp	nz,00112$
   0087 18 03               509 	jr	00113$
   0089                     510 00112$:
   0089 C3 A2 00            511 	jp	00104$
   008C                     512 00113$:
                            513 ; genCmpEq
                            514 ; AOP_HL for _currSpeedY
   008C 21 03 00            515 	ld	hl,#_currSpeedY + 0
   008F 7E                  516 	ld	a,(hl) ; 2
   0090 FE F8               517 	cp	a,#0xF8
   0092 C2 97 00            518 	jp	nz,00114$
   0095 18 03               519 	jr	00115$
   0097                     520 00114$:
   0097 C3 A2 00            521 	jp	00104$
   009A                     522 00115$:
                            523 ;	main.c 57
                            524 ; genAssign
                            525 ; AOP_HL for _jumping
   009A 21 00 00            526 	ld	hl,#_jumping + 0
   009D 36 00               527 	ld	(hl),#0x00
                            528 ; genGoto
   009F C3 E6 00            529 	jp	00107$
                            530 ; genLabel
   00A2                     531 00104$:
                            532 ;	main.c 59
                            533 ; genCmpEq
                            534 ; AOP_HL for _jumping
   00A2 21 00 00            535 	ld	hl,#_jumping + 0
   00A5 7E                  536 	ld	a,(hl)
   00A6 B7                  537 	or	a,a
   00A7 C2 AC 00            538 	jp	nz,00116$
   00AA 18 03               539 	jr	00117$
   00AC                     540 00116$:
   00AC C3 B9 00            541 	jp	00102$
   00AF                     542 00117$:
                            543 ;	main.c 60
                            544 ; genAssign
                            545 ; AOP_HL for _jumping
   00AF 21 00 00            546 	ld	hl,#_jumping + 0
   00B2 36 01               547 	ld	(hl),#0x01
                            548 ;	main.c 61
                            549 ; genAssign
                            550 ; AOP_HL for _currSpeedY
   00B4 21 03 00            551 	ld	hl,#_currSpeedY + 0
   00B7 36 0A               552 	ld	(hl),#0x0A
                            553 ; genLabel
   00B9                     554 00102$:
                            555 ;	main.c 63
                            556 ; genPlus
                            557 ; AOP_HL for _currSpeedY
                            558 ; AOP_HL for _gravity
                            559 ;	genPlusIncr failed
   00B9 21 03 00            560 	ld	hl,#_currSpeedY + 0
   00BC 7E                  561 	ld	a,(hl)
   00BD 21 04 00            562 	ld	hl,#_gravity + 0
   00C0 86                  563 	add	a,(hl)
   00C1 21 03 00            564 	ld	hl,#_currSpeedY + 0
   00C4 77                  565 	ld	(hl),a
                            566 ;	main.c 64
                            567 ; genPlus
                            568 ; AOP_STK for _jump_sloc1_1_0
                            569 ; genPlusIncr
                            570 ;	genPlusIncr failed
   00C5 11 01 00            571 	ld	de,#_playerlocation + 0
   00C8 21 01 00            572 	ld	hl,#0x0001
   00CB 19                  573 	add	hl,de
   00CC 7D                  574 	ld	a,l
   00CD 54                  575 	ld	d,h
   00CE F8 00               576 	lda	hl,0(sp)
   00D0 22                  577 	ld	(hl+),a
   00D1 72                  578 	ld	(hl),d
                            579 ; genPointerGet
                            580 ; AOP_STK for _jump_sloc1_1_0
                            581 ; AOP_STK for _jump_sloc0_1_0
   00D2 2B                  582 	dec	hl
   00D3 5E                  583 	ld	e,(hl)
   00D4 23                  584 	inc	hl
   00D5 56                  585 	ld	d,(hl)
   00D6 1A                  586 	ld	a,(de)
   00D7 23                  587 	inc	hl
   00D8 77                  588 	ld	(hl),a
                            589 ; genMinus
                            590 ; AOP_STK for _jump_sloc0_1_0
                            591 ; AOP_HL for _currSpeedY
   00D9 7E                  592 	ld	a,(hl)
   00DA 21 03 00            593 	ld	hl,#_currSpeedY + 0
   00DD 96                  594 	sub	a,(hl)
   00DE 4F                  595 	ld	c,a
                            596 ; genAssign (pointer)
                            597 ; AOP_STK for _jump_sloc1_1_0
   00DF F8 00               598 	lda	hl,0(sp)
   00E1 5E                  599 	ld	e,(hl)
   00E2 23                  600 	inc	hl
   00E3 56                  601 	ld	d,(hl)
   00E4 79                  602 	ld	a,c
   00E5 12                  603 	ld	(de),a
                            604 ; genLabel
   00E6                     605 00107$:
                            606 ; genEndFunction
   00E6 E8 03               607 	lda	sp,3(sp)
   00E8 C1                  608 	pop	bc
   00E9 C9                  609 	ret
   00EA                     610 ___jump_end:
                            611 ;	main.c 69
                            612 ; genLabel
                            613 ; genFunction
                            614 ;	---------------------------------
                            615 ; Function main
                            616 ; ---------------------------------
   00EA                     617 ___main_start:
   00EA                     618 _main:
   00EA C5                  619 	push	bc
   00EB E8 FD               620 	lda	sp,-3(sp)
                            621 ;	main.c 70
                            622 ; genAssign (pointer)
   00ED 11 01 00            623 	ld	de,#_playerlocation + 0
   00F0 3E 54               624 	ld	a,#0x54
   00F2 12                  625 	ld	(de),a
                            626 ;	main.c 71
                            627 ; genPlus
                            628 ; genPlusIncr
   00F3 01 02 00            629 	ld	bc,#_playerlocation + 0 + 1
                            630 ; genAssign (pointer)
   00F6 3E 50               631 	ld	a,#0x50
   00F8 02                  632 	ld	(bc),a
                            633 ;	main.c 72
                            634 ; genAssign
                            635 ; AOP_HL for _jumping
   00F9 21 00 00            636 	ld	hl,#_jumping + 0
   00FC 36 00               637 	ld	(hl),#0x00
                            638 ;	main.c 75
                            639 ; genIpush
   00FE 21 05 00            640 	ld	hl,#_Hero + 0
   0101 E5                  641 	push	hl
                            642 ; genIpush
   0102 3E 02               643 	ld	a,#0x02
   0104 F5                  644 	push	af
   0105 33                  645 	inc	sp
                            646 ; genIpush
   0106 3E 00               647 	ld	a,#0x00
   0108 F5                  648 	push	af
   0109 33                  649 	inc	sp
                            650 ; genCall
   010A CD 00 00            651 	call	_set_sprite_data
   010D E8 04               652 	lda	sp,4(sp)
                            653 ;	main.c 76
                            654 ; genIpush
   010F 3E 00               655 	ld	a,#0x00
   0111 F5                  656 	push	af
   0112 33                  657 	inc	sp
                            658 ; genIpush
   0113 3E 00               659 	ld	a,#0x00
   0115 F5                  660 	push	af
   0116 33                  661 	inc	sp
                            662 ; genCall
   0117 CD 00 00            663 	call	_set_sprite_tile
   011A E8 02               664 	lda	sp,2(sp)
                            665 ;	main.c 77
                            666 ; genPointerGet
                            667 ; AOP_STK for _main_sloc0_1_0
   011C 0A                  668 	ld	a,(bc)
   011D F8 02               669 	lda	hl,2(sp)
   011F 77                  670 	ld	(hl),a
                            671 ; genPointerGet
   0120 11 01 00            672 	ld	de,#_playerlocation + 0
   0123 1A                  673 	ld	a,(de)
   0124 4F                  674 	ld	c,a
                            675 ; genIpush
                            676 ; AOP_STK for _main_sloc0_1_0
   0125 7E                  677 	ld	a,(hl)
   0126 F5                  678 	push	af
   0127 33                  679 	inc	sp
                            680 ; genIpush
   0128 79                  681 	ld	a,c
   0129 F5                  682 	push	af
   012A 33                  683 	inc	sp
                            684 ; genIpush
   012B 3E 00               685 	ld	a,#0x00
   012D F5                  686 	push	af
   012E 33                  687 	inc	sp
                            688 ; genCall
   012F CD 00 00            689 	call	_move_sprite
   0132 E8 03               690 	lda	sp,3(sp)
                            691 ;	main.c 80
                            692 ; genIpush
   0134 3E 01               693 	ld	a,#0x01
   0136 F5                  694 	push	af
   0137 33                  695 	inc	sp
                            696 ; genIpush
   0138 3E 01               697 	ld	a,#0x01
   013A F5                  698 	push	af
   013B 33                  699 	inc	sp
                            700 ; genCall
   013C CD 00 00            701 	call	_set_sprite_tile
   013F E8 02               702 	lda	sp,2(sp)
                            703 ;	main.c 81
                            704 ; genIpush
   0141 3E 50               705 	ld	a,#0x50
   0143 F5                  706 	push	af
   0144 33                  707 	inc	sp
                            708 ; genIpush
   0145 3E 40               709 	ld	a,#0x40
   0147 F5                  710 	push	af
   0148 33                  711 	inc	sp
                            712 ; genIpush
   0149 3E 01               713 	ld	a,#0x01
   014B F5                  714 	push	af
   014C 33                  715 	inc	sp
                            716 ; genCall
   014D CD 00 00            717 	call	_move_sprite
   0150 E8 03               718 	lda	sp,3(sp)
                            719 ;	main.c 83
                            720 ; genOr
                            721 ; AOP_SFR for _LCDC_REG
                            722 ; Type res[4] = l[4]&r[1]
                            723 ; Size res[1] = l[1]&r[1]
   0152 F0 00               724 	ldh	a,(_LCDC_REG+0) ; x
   0154 F6 80               725 	or	a,#0x80
   0156 E0 00               726 	ldh	(_LCDC_REG+0),a
                            727 ;	main.c 84
                            728 ; genOr
                            729 ; AOP_SFR for _LCDC_REG
                            730 ; Type res[4] = l[4]&r[1]
                            731 ; Size res[1] = l[1]&r[1]
   0158 F0 00               732 	ldh	a,(_LCDC_REG+0) ; x
   015A F6 02               733 	or	a,#0x02
   015C E0 00               734 	ldh	(_LCDC_REG+0),a
                            735 ;	main.c 86
                            736 ; genIpush
   015E 21 2E 02            737 	ld	hl,#__str_0 + 0
   0161 E5                  738 	push	hl
                            739 ; genCall
   0162 CD 00 00            740 	call	_printf
   0165 E8 02               741 	lda	sp,2(sp)
                            742 ;	main.c 88
                            743 ; genLabel
   0167                     744 00113$:
                            745 ;	main.c 89
                            746 ; genCall
   0167 CD 00 00            747 	call	_joypad
   016A 4B                  748 	ld	c,e
                            749 ; genAnd
   016B 79                  750 	ld	a,c
   016C CB 6F               751 	bit	5,a
   016E C2 7F 01            752 	jp	nz,00101$
                            753 ; genCmpEq
                            754 ; AOP_HL for _jumping
   0171 21 00 00            755 	ld	hl,#_jumping + 0
   0174 7E                  756 	ld	a,(hl) ; 2
   0175 FE 01               757 	cp	a,#0x01
   0177 C2 7C 01            758 	jp	nz,00123$
   017A 18 03               759 	jr	00124$
   017C                     760 00123$:
   017C C3 82 01            761 	jp	00102$
   017F                     762 00124$:
                            763 ; genLabel
   017F                     764 00101$:
                            765 ;	main.c 90
                            766 ; genCall
   017F CD 7B 00            767 	call	_jump
                            768 ; genLabel
   0182                     769 00102$:
                            770 ;	main.c 92
                            771 ; genCall
   0182 CD 00 00            772 	call	_joypad
   0185 4B                  773 	ld	c,e
                            774 ; genAnd
   0186 79                  775 	ld	a,c
   0187 CB 57               776 	bit	2,a
   0189 CA A9 01            777 	jp	z,00105$
                            778 ;	main.c 93
                            779 ; genPlus
                            780 ; AOP_STK for _main_sloc1_1_0
                            781 ; genPlusIncr
                            782 ;	genPlusIncr failed
   018C 11 01 00            783 	ld	de,#_playerlocation + 0
   018F 21 01 00            784 	ld	hl,#0x0001
   0192 19                  785 	add	hl,de
   0193 7D                  786 	ld	a,l
   0194 54                  787 	ld	d,h
   0195 F8 00               788 	lda	hl,0(sp)
   0197 22                  789 	ld	(hl+),a
   0198 72                  790 	ld	(hl),d
                            791 ; genPointerGet
                            792 ; AOP_STK for _main_sloc1_1_0
   0199 2B                  793 	dec	hl
   019A 5E                  794 	ld	e,(hl)
   019B 23                  795 	inc	hl
   019C 56                  796 	ld	d,(hl)
   019D 1A                  797 	ld	a,(de)
   019E 4F                  798 	ld	c,a
                            799 ; genMinus
   019F 79                  800 	ld	a,c
   01A0 C6 FC               801 	add	a,#0xFC
   01A2 4F                  802 	ld	c,a
                            803 ; genAssign (pointer)
                            804 ; AOP_STK for _main_sloc1_1_0
   01A3 2B                  805 	dec	hl
   01A4 5E                  806 	ld	e,(hl)
   01A5 23                  807 	inc	hl
   01A6 56                  808 	ld	d,(hl)
   01A7 79                  809 	ld	a,c
   01A8 12                  810 	ld	(de),a
                            811 ; genLabel
   01A9                     812 00105$:
                            813 ;	main.c 95
                            814 ; genCall
   01A9 CD 00 00            815 	call	_joypad
   01AC 4B                  816 	ld	c,e
                            817 ; genAnd
   01AD 79                  818 	ld	a,c
   01AE CB 5F               819 	bit	3,a
   01B0 CA D0 01            820 	jp	z,00107$
                            821 ;	main.c 96
                            822 ; genPlus
                            823 ; AOP_STK for _main_sloc1_1_0
                            824 ; genPlusIncr
                            825 ;	genPlusIncr failed
   01B3 11 01 00            826 	ld	de,#_playerlocation + 0
   01B6 21 01 00            827 	ld	hl,#0x0001
   01B9 19                  828 	add	hl,de
   01BA 7D                  829 	ld	a,l
   01BB 54                  830 	ld	d,h
   01BC F8 00               831 	lda	hl,0(sp)
   01BE 22                  832 	ld	(hl+),a
   01BF 72                  833 	ld	(hl),d
                            834 ; genPointerGet
                            835 ; AOP_STK for _main_sloc1_1_0
   01C0 2B                  836 	dec	hl
   01C1 5E                  837 	ld	e,(hl)
   01C2 23                  838 	inc	hl
   01C3 56                  839 	ld	d,(hl)
   01C4 1A                  840 	ld	a,(de)
   01C5 4F                  841 	ld	c,a
                            842 ; genPlus
                            843 ; genPlusIncr
   01C6 0C                  844 	inc	c
   01C7 0C                  845 	inc	c
   01C8 0C                  846 	inc	c
   01C9 0C                  847 	inc	c
                            848 ; genAssign (pointer)
                            849 ; AOP_STK for _main_sloc1_1_0
   01CA 2B                  850 	dec	hl
   01CB 5E                  851 	ld	e,(hl)
   01CC 23                  852 	inc	hl
   01CD 56                  853 	ld	d,(hl)
   01CE 79                  854 	ld	a,c
   01CF 12                  855 	ld	(de),a
                            856 ; genLabel
   01D0                     857 00107$:
                            858 ;	main.c 98
                            859 ; genCall
   01D0 CD 00 00            860 	call	_joypad
   01D3 4B                  861 	ld	c,e
                            862 ; genAnd
   01D4 79                  863 	ld	a,c
   01D5 CB 4F               864 	bit	1,a
   01D7 CA E8 01            865 	jp	z,00109$
                            866 ;	main.c 99
                            867 ; genPointerGet
   01DA 11 01 00            868 	ld	de,#_playerlocation + 0
   01DD 1A                  869 	ld	a,(de)
   01DE 4F                  870 	ld	c,a
                            871 ; genMinus
   01DF 79                  872 	ld	a,c
   01E0 C6 FC               873 	add	a,#0xFC
   01E2 4F                  874 	ld	c,a
                            875 ; genAssign (pointer)
   01E3 11 01 00            876 	ld	de,#_playerlocation + 0
   01E6 79                  877 	ld	a,c
   01E7 12                  878 	ld	(de),a
                            879 ; genLabel
   01E8                     880 00109$:
                            881 ;	main.c 101
                            882 ; genCall
   01E8 CD 00 00            883 	call	_joypad
   01EB 4B                  884 	ld	c,e
                            885 ; genAnd
   01EC 79                  886 	ld	a,c
   01ED CB 47               887 	bit	0,a
   01EF CA 00 02            888 	jp	z,00111$
                            889 ;	main.c 102
                            890 ; genPointerGet
   01F2 11 01 00            891 	ld	de,#_playerlocation + 0
   01F5 1A                  892 	ld	a,(de)
   01F6 4F                  893 	ld	c,a
                            894 ; genPlus
                            895 ; genPlusIncr
   01F7 0C                  896 	inc	c
   01F8 0C                  897 	inc	c
   01F9 0C                  898 	inc	c
   01FA 0C                  899 	inc	c
                            900 ; genAssign (pointer)
   01FB 11 01 00            901 	ld	de,#_playerlocation + 0
   01FE 79                  902 	ld	a,c
   01FF 12                  903 	ld	(de),a
                            904 ; genLabel
   0200                     905 00111$:
                            906 ;	main.c 105
                            907 ; genCall
   0200 CD 14 00            908 	call	_checkScreenLimit
                            909 ;	main.c 106
                            910 ; genPlus
                            911 ; genPlusIncr
   0203 11 02 00            912 	ld	de,#_playerlocation + 0 + 1
                            913 ; genPointerGet
                            914 ; AOP_STK for _main_sloc1_1_0
   0206 1A                  915 	ld	a,(de)
   0207 F8 00               916 	lda	hl,0(sp)
   0209 77                  917 	ld	(hl),a
                            918 ; genPointerGet
   020A 11 01 00            919 	ld	de,#_playerlocation + 0
   020D 1A                  920 	ld	a,(de)
   020E 4F                  921 	ld	c,a
                            922 ; genIpush
                            923 ; AOP_STK for _main_sloc1_1_0
   020F 7E                  924 	ld	a,(hl)
   0210 F5                  925 	push	af
   0211 33                  926 	inc	sp
                            927 ; genIpush
   0212 79                  928 	ld	a,c
   0213 F5                  929 	push	af
   0214 33                  930 	inc	sp
                            931 ; genIpush
   0215 3E 00               932 	ld	a,#0x00
   0217 F5                  933 	push	af
   0218 33                  934 	inc	sp
                            935 ; genCall
   0219 CD 00 00            936 	call	_move_sprite
   021C E8 03               937 	lda	sp,3(sp)
                            938 ;	main.c 107
                            939 ; genIpush
   021E 3E 05               940 	ld	a,#0x05
   0220 F5                  941 	push	af
   0221 33                  942 	inc	sp
                            943 ; genCall
   0222 CD 00 00            944 	call	_perfDelay
   0225 E8 01               945 	lda	sp,1(sp)
                            946 ; genGoto
   0227 C3 67 01            947 	jp	00113$
                            948 ; genLabel
   022A                     949 00115$:
                            950 ; genEndFunction
   022A E8 03               951 	lda	sp,3(sp)
   022C C1                  952 	pop	bc
   022D C9                  953 	ret
   022E                     954 ___main_end:
   022E                     955 __str_0:
   022E 5A 41 20 57 41 52   956 	.ascii "ZA WARUDOOO!!"
        55 44 4F 4F 4F 21
        21
   023B 00                  957 	.db 0x00
                            958 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
  1 _Hero                              0005 GR
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___checkScreenLimit_end            007B R
  0 ___checkScreenLimit_start          0014 R
  0 ___jump_end                        00EA R
  0 ___jump_start                      007B R
  0 ___main_end                        022E R
  0 ___main_start                      00EA R
  0 ___perfDelay_end                   0014 R
  0 ___perfDelay_start                 0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  0 __str_0                            022E R
  0 _checkScreenLimit                  0014 GR
  1 _currSpeedY                        0003 GR
  1 _gravity                           0004 GR
    _joypad                            **** GX
  0 _jump                              007B GR
  1 _jumping                           0000 GR
  0 _main                              00EA GR
    _move_sprite                       **** GX
  0 _perfDelay                         0000 GR
  1 _playerlocation                    0001 GR
    _printf                            **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
    _sys_time                          **** GX
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  23C   flags 0
   1 _DATA                              size   25   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   C5   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
